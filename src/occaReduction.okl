

@kernel void occaReduction(int N, const int *a, int *reda){

  for(int b=0;b<((N/4)+255)/256;++b;@outer(0)){

    @shared int s_a[256];
    
    for(int t=0;t<256;++t;@inner(0)){
      s_a[t] = a[t+b*256] +
	a[t+b*256 + N/4]+ 
	a[t+b*256 + N/2]+
	a[t+b*256 + 3*N/4]; 
    }

    for(int t=0;t<256;++t;@inner(0)) if(t<128) s_a[t] += s_a[t+128];

    for(int t=0;t<256;++t;@inner(0)) if(t< 64) s_a[t] += s_a[t+ 64];

    for(int t=0;t<256;++t;@inner(0)) if(t< 32) s_a[t] += s_a[t+ 32];

    for(int t=0;t<256;++t;@inner(0)) if(t< 16) s_a[t] += s_a[t+ 16];

    for(int t=0;t<256;++t;@inner(0)) if(t<  8) s_a[t] += s_a[t+  8];

    for(int t=0;t<256;++t;@inner(0)) if(t<  4) s_a[t] += s_a[t+  4];

    for(int t=0;t<256;++t;@inner(0)) if(t<  2) s_a[t] += s_a[t+  2];

    for(int t=0;t<256;++t;@inner(0)) if(t<  1) s_a[t] += s_a[t+  1];

    for(int t=0;t<256;++t;@inner(0)) if(t==0) reda[b] = s_a[0];
  }
}
